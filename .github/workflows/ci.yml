name: ci

on:
  pull_request:
    paths:
      - 'infra/**'
      - '!infra/**md'
      - '.github/workflows/ci.yml'
    branches:
      - main
  push:
    paths:
      - 'infra/**'
      - '!infra/**md'
      - '.github/workflows/ci.yml'
    branches:
      - main

env:
  TERRAFORM_VERSION: 1.3.3
  WORKING_DIR: infra

jobs:
  terraform:
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    name: Terraform
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ${{ env.WORKING_DIR }}
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: google-github-actions/auth@v0.7.0
      with:
        create_credentials_file: 'true'
        workload_identity_provider: projects/848541161515/locations/global/workloadIdentityPools/github-actions/providers/gha-provider
        service_account: terraform-ci@site-autofill.iam.gserviceaccount.com

    - uses: hashicorp/setup-terraform@v1

    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -lock=false
      continue-on-error: true

    - uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          <details><summary>Validation Output</summary>
          \`\`\`\n
          ${{ steps.validate.outputs.stdout }}
          \`\`\`
          </details>
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          </details>
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    - if: steps.plan.outcome == 'failure' || steps.fmt.outcome == 'failure'
      name: make it fail when plan failed
      run: exit 1

    - name: Terraform Apply
      id: apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false -lock=false # TODO